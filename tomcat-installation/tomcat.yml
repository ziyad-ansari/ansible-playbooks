- name: install tomcat on ubuntu
  hosts: all
  become: yes
  vars: 
    user_name: tomcat
    group_name: tomcat
    java_package_name: openjdk-11-jdk
    user_home: /opt/tomcat
  tasks:
    - name: jdk install
      ansible.builtin.apt:
        update_cache: yes
        name: openjdk-11-jdk
        state: present
    - name: create group
      ansible.builtin.group:
        name: "{{ group_name }}"
        state: present
    - name: create user
      ansible.builtin.user:
        create_home: yes
        group: "{{ group_name }}"
        home: "{{ user_home }}"
        name: "{{ user_name }}"
        shell: /bin/false
        state: present
    - name: downloading tomcat
      ansible.builtin.unarchive:
        src: https://www-eu.apache.org/dist/tomcat/tomcat-10/v10.1.4/bin/apache-tomcat-10.1.4.tar.gz 
        dest: "{{ user_home }}"
        remote_src: true
        group: "{{ group_name }}"
    - name: adding links
      ansible.builtin.file:
        src: "{{ user_home }}"/apache-tomcat-10.1.4
        path: "{{ user_home }}"/latest
        state: link
    - name: changing ownership
      ansible.builtin.file:
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        path: "{{ user_home }}"
        recurse: true
        state: directory
    - name: executing script
      ansible.builtin.command:
        cmd: sudo sh -c 'chmod +x "{{ user_home }}"/latest/bin/*.sh'
    - name: creating system D unit file
      ansible.builtin.copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service
        group: "{{ user_name }}"
        owner: "{{ group_name }}"
    - name: daemon reload and starting tomcat service
      ansible.builtin.systemd:
        daemon_reload: true
        name: tomcat.service
        state: started
    - name: changing in tomcat-users.xml
      ansible.builtin.copy:
        src: tomcat-users.xml
        dest: "{{ user_home }}"/latest/conf/tomcat-users.xml
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: changing in context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}"/latest/webapps/manager/META-INF/context.xml
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: changing in context file
      ansible.builtin.copy:
        src: context.xml
        dest: "{{ user_home }}"/latest/webapps/host-manager/META-INF/context.xml
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
    - name: restarting tomcat service
      ansible.builtin.systemd:
        name: tomcat.service
        state: restarted
      

          
